@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: <span class="@BackgroundColor">@currentCount</span></p>

<p>
    <input type="number" @bind="@increment"
           @onkeypress="KeyHandler"
           @onkeypress:preventDefault />
    @*@onchange="@((ChangeEventArgs e)=> increment = int.Parse($"{e.Value}"))"*@
</p>


<div style="width: 400px; height: 400px; background: yellow" @onmousemove="OuterMouseMove">
    @outerPos
    <div style="width: 300px; height: 300px;background: green; margin:50px" 
    @onmousemove="InnerMouseMove"
         @onmousemove:preventDefault="@shouldPreventDefault">
        >
        @innerPos
    </div>
</div>
<br />



<button class="btn btn-primary"
        disabled="@(currentCount > 10)"
@onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;
    private int increment = 1;
    private bool shouldPreventDefault = true;
    private string BackgroundColor => (currentCount % 2 == 0) ? "red-background" : "yellow-background";

    private void IncrementCount(MouseEventArgs e)
    {
        if (e.CtrlKey)
        {
            currentCount -= increment;
        }
        else
        {
            currentCount += increment;
        }
       // currentCount++;
    }



    private void KeyHandler(KeyboardEventArgs e)
    {
        if (e.Key == "+")
        {
            increment += 1;
        }
        else if (e.Key == "-")
        {
            increment -= 1;
        }
    }


    private string outerPos = "Nothing yet";
    private void OuterMouseMove(MouseEventArgs e)=> outerPos = $"Mouse at {e.ClientX}x{e.ClientY}";
    private string innerPos = "Nothing yet";
    private void InnerMouseMove(MouseEventArgs e)=> innerPos = $"Mouse at {e.ClientX}x{e.ClientY}";


    
}
