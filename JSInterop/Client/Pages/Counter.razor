@page "/counter"
@using JSInterop.Client.Services
@using Microsoft.AspNetCore.Components
@*@inject IJSRuntime js*@
@inject ILocalStorage localStorage;

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @CurrentCount</p>


<div>
    <input @ref="inputElement" @bind="@CurrentCount" />
</div>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;
    //private ElementReference? inputElement;

    public int CurrentCount
    {
        get => currentCount;
        set
        {
            if (currentCount != value)
            {
                currentCount = value;
                //js.InvokeVoidAsync("blazorLocalStorage.set",
                //nameof(CurrentCount), currentCount);

                localStorage
    .SetProperty<int>(nameof(CurrentCount), currentCount);
            }
        }
    }

    private void IncrementCount()
    {
        CurrentCount++;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await localStorage.WatchAsync(this);
            int c = await localStorage
                .GetProperty<int>(nameof(CurrentCount));

            //int c = await js.InvokeAsync<int>(
            //"blazorLocalStorage.get", nameof(CurrentCount));
            currentCount = c;
        }
        catch { }
    }

    private ElementReference inputElement = default!;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await inputElement.FocusAsync();
        }

        //if (inputElement is not null)
        //{
        //    await js.InvokeVoidAsync("blazorFocus.set", inputElement);
        //}

        //var objRef = DotNetObjectReference.Create(this);
        //await js.InvokeVoidAsync("blazorLocalStorage.watch", objRef);
    }



    [JSInvokable]
    public async Task UpdateCounter()
    {
        int c = await localStorage
    .GetProperty<int>(nameof(CurrentCount));
        //int c = await js.InvokeAsync<int>("blazorLocalStorage.get",
        //nameof(CurrentCount));



        currentCount = c;
        this.StateHasChanged();
    }
}
